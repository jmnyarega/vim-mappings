!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Vim	C,constant	/constant definitions/
!_TAG_KIND_DESCRIPTION!Vim	a,augroup	/autocommand groups/
!_TAG_KIND_DESCRIPTION!Vim	c,command	/user-defined commands/
!_TAG_KIND_DESCRIPTION!Vim	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!Vim	m,map	/maps/
!_TAG_KIND_DESCRIPTION!Vim	n,filename	/vimball filename/
!_TAG_KIND_DESCRIPTION!Vim	v,variable	/variable definitions/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!Vim	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/josiah/.dotfiles/lang_settings/.vim/pack/minpac/start/vim-mappings/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/v6.1.0/
+	plugin/mappings.vim	/^nnoremap <silent> + :resize +1 <CR>$/;"	m
-	plugin/mappings.vim	/^nnoremap <silent> - :resize -1 <CR>$/;"	m
-	plugin/mappings.vim	/^nnoremap <silent> - :split % <CR>$/;"	m
<C-B>	plugin/mappings.vim	/^nnoremap <C-B> :Buffers <CR>$/;"	m
<C-G>	plugin/mappings.vim	/^nnoremap <C-G> :Git <CR>$/;"	m
<C-_>	plugin/mappings.vim	/^vnoremap <C-_> :Commentary<CR>$/;"	m
<C-c>	plugin/mappings.vim	/^inoremap <C-c> <Esc>$/;"	m
<C-f>	plugin/mappings.vim	/^nnoremap <C-f> :GFiles <CR>$/;"	m
<C-p>	plugin/mappings.vim	/^nnoremap <C-p> :GFiles <CR>$/;"	m
<C-t>	plugin/mappings.vim	/^nnoremap <C-t> :terminal <CR>$/;"	m
<C-w>	plugin/mappings.vim	/^nnoremap <C-w> :q!<CR>$/;"	m
<CR>	plugin/mappings.vim	/^inoremap <silent><expr> <CR> coc#pum#visible() ? coc#pum#confirm()$/;"	m
<CapsLock>	plugin/mappings.vim	/^inoremap <CapsLock> <Esc>$/;"	m
<CapsLock>	plugin/mappings.vim	/^nnoremap <CapsLock> <Esc>$/;"	m
<CapsLock>	plugin/mappings.vim	/^vnoremap <CapsLock> <Esc>$/;"	m
<ESC>	plugin/mappings.vim	/^nnoremap <ESC> :cclose <CR>$/;"	m
<F5>	plugin/mappings.vim	/^noremap <F5> :CocList tasks run<CR>$/;"	m
<S-TAB>	plugin/mappings.vim	/^inoremap <expr><S-TAB> coc#pum#visible() ? coc#pum#prev(1) : "\\<C-h>"$/;"	m
<TAB>	plugin/mappings.vim	/^inoremap <silent><expr> <TAB>$/;"	m
<c-_>	plugin/mappings.vim	/^noremap  <c-_>  :Commentary<CR>$/;"	m
<down>	plugin/mappings.vim	/^ino <down> <Nop>$/;"	m
<down>	plugin/mappings.vim	/^no <down> :m .+1 <CR> ==$/;"	m
<down>	plugin/mappings.vim	/^xnoremap <down> :m'>+<CR>gv=gv$/;"	m
<leader>/	plugin/mappings.vim	/^nnoremap <silent><nowait> <leader>\/  :<C-u>AnyJumpArg <space>$/;"	m
<leader><TAB>	plugin/mappings.vim	/^nnoremap <leader><TAB> :copen <CR>$/;"	m
<leader>Y	plugin/mappings.vim	/^nnoremap <leader>Y gg"+yG$/;"	m
<leader>a	plugin/mappings.vim	/^nmap <leader>a  <Plug>(coc-codeaction-cursor)$/;"	m
<leader>as	plugin/mappings.vim	/^nmap <leader>as  <Plug>(coc-codeaction-source)$/;"	m
<leader>b	plugin/mappings.vim	/^nnoremap <silent><nowait> <leader>b  :Jumps <CR>$/;"	m
<leader>cl	plugin/mappings.vim	/^nmap <leader>cl  <Plug>(coc-codelens-action)$/;"	m
<leader>d	plugin/mappings.vim	/^nnoremap <leader>d "_d$/;"	m
<leader>f	plugin/mappings.vim	/^nmap <leader>f <Plug>(coc-format)$/;"	m
<leader>f	plugin/mappings.vim	/^vmap <leader>f <Plug>(coc-format-selected)$/;"	m
<leader>g	plugin/mappings.vim	/^nnoremap <silent><nowait> <leader>g  :<C-u>FloatermNew lazygit<cr>$/;"	m
<leader>i	plugin/mappings.vim	/^nnoremap <leader>i :set mouse=a<CR>$/;"	m
<leader>m	plugin/mappings.vim	/^nnoremap <leader>m :set mouse=<CR>$/;"	m
<leader>n	plugin/mappings.vim	/^nnoremap <silent><nowait> <leader>n  :<C-u>CocCommand explorer<cr>$/;"	m
<leader>p	plugin/mappings.vim	/^xnoremap <leader>p "_dP$/;"	m
<leader>qf	plugin/mappings.vim	/^nmap <leader>qf  <Plug>(coc-fix-current)$/;"	m
<leader>r	plugin/mappings.vim	/^nmap <silent> <leader>r  <Plug>(coc-codeaction-refactor-selected)$/;"	m
<leader>r	plugin/mappings.vim	/^xmap <silent> <leader>r  <Plug>(coc-codeaction-refactor-selected)$/;"	m
<leader>re	plugin/mappings.vim	/^nmap <silent> <leader>re <Plug>(coc-codeaction-refactor)$/;"	m
<leader>rn	plugin/mappings.vim	/^nmap <leader>rn <Plug>(coc-rename)$/;"	m
<leader>y	plugin/mappings.vim	/^nnoremap <leader>y "+y$/;"	m
<leader>y	plugin/mappings.vim	/^vnoremap <leader>y "+y$/;"	m
<leader>z	plugin/mappings.vim	/^nnoremap <leader>z :set foldenable <CR>$/;"	m
<leader>zz	plugin/mappings.vim	/^nnoremap <leader>zz :set nofoldenable <CR>$/;"	m
<left>	plugin/mappings.vim	/^ino <left> <Nop>$/;"	m
<left>	plugin/mappings.vim	/^nnoremap <left> :vertical resize +10 <CR>$/;"	m
<right>	plugin/mappings.vim	/^ino <right> <Nop>$/;"	m
<right>	plugin/mappings.vim	/^nnoremap <right> :vertical resize -10 <CR>$/;"	m
<space>c	plugin/mappings.vim	/^nnoremap <silent><nowait> <space>c  :<C-u>CocList commands<cr>$/;"	m
<space>d	plugin/mappings.vim	/^nnoremap <silent><nowait> <space>d  :<C-u>CocList diagnostics<cr>$/;"	m
<space>e	plugin/mappings.vim	/^nnoremap <silent><nowait> <space>e  :<C-u>CocList extensions<cr>$/;"	m
<space>o	plugin/mappings.vim	/^nnoremap <silent><nowait> <space>o  :<C-u>CocList outline<cr>$/;"	m
<space>p	plugin/mappings.vim	/^nnoremap <silent><nowait> <space>p  :<C-u>CocListResume<CR>$/;"	m
<space>s	plugin/mappings.vim	/^nnoremap <silent><nowait> <space>s  :<C-u>CocList -I symbols<cr>$/;"	m
<space>w	plugin/mappings.vim	/^nnoremap <silent><nowait> <space>w  :<C-u>CocList issues<cr>$/;"	m
<up>	plugin/mappings.vim	/^ino <up> <Nop>$/;"	m
<up>	plugin/mappings.vim	/^no <up> :m .-2 <CR> ==$/;"	m
<up>	plugin/mappings.vim	/^xnoremap <up> :m-2<CR>gv=gv$/;"	m
CheckBackspace	plugin/mappings.vim	/^function! CheckBackspace() abort$/;"	f
J	plugin/mappings.vim	/^nnoremap J mzJ`z$/;"	m
J	plugin/mappings.vim	/^vnoremap J :m '>+1<CR>gv=gv$/;"	m
K	plugin/mappings.vim	/^nnoremap <silent> K :call ShowDocumentation()<CR>$/;"	m
K	plugin/mappings.vim	/^vnoremap K :m '<-2<CR>gv=gv$/;"	m
N	plugin/mappings.vim	/^nnoremap N Nzzzv$/;"	m
ShowDocumentation	plugin/mappings.vim	/^function! ShowDocumentation()$/;"	f
Y	plugin/mappings.vim	/^nnoremap Y yg\$$/;"	m
\\|	plugin/mappings.vim	/^nnoremap <silent> \\| :vsplit % <CR>$/;"	m
ac	plugin/mappings.vim	/^omap ac <Plug>(coc-classobj-a)$/;"	m
ac	plugin/mappings.vim	/^xmap ac <Plug>(coc-classobj-a)$/;"	m
af	plugin/mappings.vim	/^omap af <Plug>(coc-funcobj-a)$/;"	m
af	plugin/mappings.vim	/^xmap af <Plug>(coc-funcobj-a)$/;"	m
g:asyncrun_open	plugin/mappings.vim	/^let g:asyncrun_open = 6$/;"	v
g:asynctasks_term_cols	plugin/mappings.vim	/^let g:asynctasks_term_cols = 80$/;"	v
g:asynctasks_term_pos	plugin/mappings.vim	/^let g:asynctasks_term_pos = 'right'$/;"	v
g:asynctasks_term_rows	plugin/mappings.vim	/^let g:asynctasks_term_rows = 10$/;"	v
gd	plugin/mappings.vim	/^nmap <silent> gd <Plug>(coc-definition)$/;"	m
gi	plugin/mappings.vim	/^nmap <silent> gi <Plug>(coc-implementation)$/;"	m
gr	plugin/mappings.vim	/^nmap <silent> gr <Plug>(coc-references)$/;"	m
gy	plugin/mappings.vim	/^nmap <silent> gy <Plug>(coc-type-definition)$/;"	m
ic	plugin/mappings.vim	/^omap ic <Plug>(coc-classobj-i)$/;"	m
ic	plugin/mappings.vim	/^xmap ic <Plug>(coc-classobj-i)$/;"	m
if	plugin/mappings.vim	/^omap if <Plug>(coc-funcobj-i)$/;"	m
if	plugin/mappings.vim	/^xmap if <Plug>(coc-funcobj-i)$/;"	m
mapleader	plugin/mappings.vim	/^let mapleader = " "$/;"	v
n	plugin/mappings.vim	/^nnoremap n nzzzv$/;"	m
s	plugin/mappings.vim	/^nnoremap s :w<CR>$/;"	m
